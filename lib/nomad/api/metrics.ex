# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Nomad.Api.Metrics do
  @moduledoc """
  API calls for all endpoints tagged `Metrics`.
  """

  alias Nomad.Connection
  import Nomad.RequestBuilder


  @doc """

  ## Parameters

  - connection (Nomad.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :format (String.t): The format the user requested for the metrics summary (e.g. prometheus)
  ## Returns

  {:ok, Nomad.Model.MetricsSummary.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec get_metrics_summary(Tesla.Env.client, keyword()) :: {:ok, nil} | {:ok, Nomad.Model.MetricsSummary.t} | {:error, Tesla.Env.t}
  def get_metrics_summary(connection, opts \\ []) do
    optional_params = %{
      :format => :query
    }
    %{}
    |> method(:get)
    |> url("/metrics")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %Nomad.Model.MetricsSummary{}},
      { 400, false},
      { 403, false},
      { 405, false},
      { 500, false}
    ])
  end
end
