# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Nomad.Model.Task do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :Affinities,
    :Artifacts,
    :CSIPluginConfig,
    :Config,
    :Constraints,
    :DispatchPayload,
    :Driver,
    :Env,
    :KillSignal,
    :KillTimeout,
    :Kind,
    :Leader,
    :Lifecycle,
    :LogConfig,
    :Meta,
    :Name,
    :Resources,
    :RestartPolicy,
    :ScalingPolicies,
    :Services,
    :ShutdownDelay,
    :Templates,
    :User,
    :Vault,
    :VolumeMounts
  ]

  @type t :: %__MODULE__{
    :Affinities => [Nomad.Model.Affinity.t] | nil,
    :Artifacts => [Nomad.Model.TaskArtifact.t] | nil,
    :CSIPluginConfig => Nomad.Model.TaskCsiPluginConfig.t | nil,
    :Config => %{optional(String.t) => any()} | nil,
    :Constraints => [Nomad.Model.Constraint.t] | nil,
    :DispatchPayload => Nomad.Model.DispatchPayloadConfig.t | nil,
    :Driver => String.t | nil,
    :Env => %{optional(String.t) => String.t} | nil,
    :KillSignal => String.t | nil,
    :KillTimeout => integer() | nil,
    :Kind => String.t | nil,
    :Leader => boolean() | nil,
    :Lifecycle => Nomad.Model.TaskLifecycle.t | nil,
    :LogConfig => Nomad.Model.LogConfig.t | nil,
    :Meta => %{optional(String.t) => String.t} | nil,
    :Name => String.t | nil,
    :Resources => Nomad.Model.Resources.t | nil,
    :RestartPolicy => Nomad.Model.RestartPolicy.t | nil,
    :ScalingPolicies => [Nomad.Model.ScalingPolicy.t] | nil,
    :Services => [Nomad.Model.Service.t] | nil,
    :ShutdownDelay => integer() | nil,
    :Templates => [Nomad.Model.Template.t] | nil,
    :User => String.t | nil,
    :Vault => Nomad.Model.Vault.t | nil,
    :VolumeMounts => [Nomad.Model.VolumeMount.t] | nil
  }
end

defimpl Poison.Decoder, for: Nomad.Model.Task do
  import Nomad.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:Affinities, :list, Nomad.Model.Affinity, options)
    |> deserialize(:Artifacts, :list, Nomad.Model.TaskArtifact, options)
    |> deserialize(:CSIPluginConfig, :struct, Nomad.Model.TaskCsiPluginConfig, options)
    |> deserialize(:Constraints, :list, Nomad.Model.Constraint, options)
    |> deserialize(:DispatchPayload, :struct, Nomad.Model.DispatchPayloadConfig, options)
    |> deserialize(:Lifecycle, :struct, Nomad.Model.TaskLifecycle, options)
    |> deserialize(:LogConfig, :struct, Nomad.Model.LogConfig, options)
    |> deserialize(:Resources, :struct, Nomad.Model.Resources, options)
    |> deserialize(:RestartPolicy, :struct, Nomad.Model.RestartPolicy, options)
    |> deserialize(:ScalingPolicies, :list, Nomad.Model.ScalingPolicy, options)
    |> deserialize(:Services, :list, Nomad.Model.Service, options)
    |> deserialize(:Templates, :list, Nomad.Model.Template, options)
    |> deserialize(:Vault, :struct, Nomad.Model.Vault, options)
    |> deserialize(:VolumeMounts, :list, Nomad.Model.VolumeMount, options)
  end
end

