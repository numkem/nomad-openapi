# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Nomad.Model.TaskGroup do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :Affinities,
    :Constraints,
    :Consul,
    :Count,
    :EphemeralDisk,
    :MaxClientDisconnect,
    :Meta,
    :Migrate,
    :Name,
    :Networks,
    :ReschedulePolicy,
    :RestartPolicy,
    :Scaling,
    :Services,
    :ShutdownDelay,
    :Spreads,
    :StopAfterClientDisconnect,
    :Tasks,
    :Update,
    :Volumes
  ]

  @type t :: %__MODULE__{
    :Affinities => [Nomad.Model.Affinity.t] | nil,
    :Constraints => [Nomad.Model.Constraint.t] | nil,
    :Consul => Nomad.Model.Consul.t | nil,
    :Count => integer() | nil,
    :EphemeralDisk => Nomad.Model.EphemeralDisk.t | nil,
    :MaxClientDisconnect => integer() | nil,
    :Meta => %{optional(String.t) => String.t} | nil,
    :Migrate => Nomad.Model.MigrateStrategy.t | nil,
    :Name => String.t | nil,
    :Networks => [Nomad.Model.NetworkResource.t] | nil,
    :ReschedulePolicy => Nomad.Model.ReschedulePolicy.t | nil,
    :RestartPolicy => Nomad.Model.RestartPolicy.t | nil,
    :Scaling => Nomad.Model.ScalingPolicy.t | nil,
    :Services => [Nomad.Model.Service.t] | nil,
    :ShutdownDelay => integer() | nil,
    :Spreads => [Nomad.Model.Spread.t] | nil,
    :StopAfterClientDisconnect => integer() | nil,
    :Tasks => [Nomad.Model.Task.t] | nil,
    :Update => Nomad.Model.UpdateStrategy.t | nil,
    :Volumes => %{optional(String.t) => Nomad.Model.VolumeRequest.t} | nil
  }
end

defimpl Poison.Decoder, for: Nomad.Model.TaskGroup do
  import Nomad.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:Affinities, :list, Nomad.Model.Affinity, options)
    |> deserialize(:Constraints, :list, Nomad.Model.Constraint, options)
    |> deserialize(:Consul, :struct, Nomad.Model.Consul, options)
    |> deserialize(:EphemeralDisk, :struct, Nomad.Model.EphemeralDisk, options)
    |> deserialize(:Migrate, :struct, Nomad.Model.MigrateStrategy, options)
    |> deserialize(:Networks, :list, Nomad.Model.NetworkResource, options)
    |> deserialize(:ReschedulePolicy, :struct, Nomad.Model.ReschedulePolicy, options)
    |> deserialize(:RestartPolicy, :struct, Nomad.Model.RestartPolicy, options)
    |> deserialize(:Scaling, :struct, Nomad.Model.ScalingPolicy, options)
    |> deserialize(:Services, :list, Nomad.Model.Service, options)
    |> deserialize(:Spreads, :list, Nomad.Model.Spread, options)
    |> deserialize(:Tasks, :list, Nomad.Model.Task, options)
    |> deserialize(:Update, :struct, Nomad.Model.UpdateStrategy, options)
    |> deserialize(:Volumes, :map, Nomad.Model.VolumeRequest, options)
  end
end

