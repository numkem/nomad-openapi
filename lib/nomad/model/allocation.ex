# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Nomad.Model.Allocation do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :AllocModifyIndex,
    :AllocatedResources,
    :ClientDescription,
    :ClientStatus,
    :CreateIndex,
    :CreateTime,
    :DeploymentID,
    :DeploymentStatus,
    :DesiredDescription,
    :DesiredStatus,
    :DesiredTransition,
    :EvalID,
    :FollowupEvalID,
    :ID,
    :Job,
    :JobID,
    :Metrics,
    :ModifyIndex,
    :ModifyTime,
    :Name,
    :Namespace,
    :NextAllocation,
    :NodeID,
    :NodeName,
    :PreemptedAllocations,
    :PreemptedByAllocation,
    :PreviousAllocation,
    :RescheduleTracker,
    :Resources,
    :Services,
    :TaskGroup,
    :TaskResources,
    :TaskStates
  ]

  @type t :: %__MODULE__{
    :AllocModifyIndex => integer() | nil,
    :AllocatedResources => Nomad.Model.AllocatedResources.t | nil,
    :ClientDescription => String.t | nil,
    :ClientStatus => String.t | nil,
    :CreateIndex => integer() | nil,
    :CreateTime => integer() | nil,
    :DeploymentID => String.t | nil,
    :DeploymentStatus => Nomad.Model.AllocDeploymentStatus.t | nil,
    :DesiredDescription => String.t | nil,
    :DesiredStatus => String.t | nil,
    :DesiredTransition => Nomad.Model.DesiredTransition.t | nil,
    :EvalID => String.t | nil,
    :FollowupEvalID => String.t | nil,
    :ID => String.t | nil,
    :Job => Nomad.Model.Job.t | nil,
    :JobID => String.t | nil,
    :Metrics => Nomad.Model.AllocationMetric.t | nil,
    :ModifyIndex => integer() | nil,
    :ModifyTime => integer() | nil,
    :Name => String.t | nil,
    :Namespace => String.t | nil,
    :NextAllocation => String.t | nil,
    :NodeID => String.t | nil,
    :NodeName => String.t | nil,
    :PreemptedAllocations => [String.t] | nil,
    :PreemptedByAllocation => String.t | nil,
    :PreviousAllocation => String.t | nil,
    :RescheduleTracker => Nomad.Model.RescheduleTracker.t | nil,
    :Resources => Nomad.Model.Resources.t | nil,
    :Services => %{optional(String.t) => String.t} | nil,
    :TaskGroup => String.t | nil,
    :TaskResources => %{optional(String.t) => Nomad.Model.Resources.t} | nil,
    :TaskStates => %{optional(String.t) => Nomad.Model.TaskState.t} | nil
  }
end

defimpl Poison.Decoder, for: Nomad.Model.Allocation do
  import Nomad.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:AllocatedResources, :struct, Nomad.Model.AllocatedResources, options)
    |> deserialize(:DeploymentStatus, :struct, Nomad.Model.AllocDeploymentStatus, options)
    |> deserialize(:DesiredTransition, :struct, Nomad.Model.DesiredTransition, options)
    |> deserialize(:Job, :struct, Nomad.Model.Job, options)
    |> deserialize(:Metrics, :struct, Nomad.Model.AllocationMetric, options)
    |> deserialize(:RescheduleTracker, :struct, Nomad.Model.RescheduleTracker, options)
    |> deserialize(:Resources, :struct, Nomad.Model.Resources, options)
    |> deserialize(:TaskResources, :map, Nomad.Model.Resources, options)
    |> deserialize(:TaskStates, :map, Nomad.Model.TaskState, options)
  end
end

