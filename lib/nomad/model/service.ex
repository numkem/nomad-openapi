# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Nomad.Model.Service do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :Address,
    :AddressMode,
    :CanaryMeta,
    :CanaryTags,
    :CheckRestart,
    :Checks,
    :Connect,
    :EnableTagOverride,
    :Meta,
    :Name,
    :OnUpdate,
    :PortLabel,
    :Provider,
    :TaggedAddresses,
    :Tags,
    :TaskName
  ]

  @type t :: %__MODULE__{
    :Address => String.t | nil,
    :AddressMode => String.t | nil,
    :CanaryMeta => %{optional(String.t) => String.t} | nil,
    :CanaryTags => [String.t] | nil,
    :CheckRestart => Nomad.Model.CheckRestart.t | nil,
    :Checks => [Nomad.Model.ServiceCheck.t] | nil,
    :Connect => Nomad.Model.ConsulConnect.t | nil,
    :EnableTagOverride => boolean() | nil,
    :Meta => %{optional(String.t) => String.t} | nil,
    :Name => String.t | nil,
    :OnUpdate => String.t | nil,
    :PortLabel => String.t | nil,
    :Provider => String.t | nil,
    :TaggedAddresses => %{optional(String.t) => String.t} | nil,
    :Tags => [String.t] | nil,
    :TaskName => String.t | nil
  }
end

defimpl Poison.Decoder, for: Nomad.Model.Service do
  import Nomad.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:CheckRestart, :struct, Nomad.Model.CheckRestart, options)
    |> deserialize(:Checks, :list, Nomad.Model.ServiceCheck, options)
    |> deserialize(:Connect, :struct, Nomad.Model.ConsulConnect, options)
  end
end

