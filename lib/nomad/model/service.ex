# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Nomad.Model.Service do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"AddressMode",
    :"CanaryMeta",
    :"CanaryTags",
    :"CheckRestart",
    :"Checks",
    :"Connect",
    :"EnableTagOverride",
    :"Id",
    :"Meta",
    :"Name",
    :"OnUpdate",
    :"PortLabel",
    :"Tags",
    :"TaskName"
  ]

  @type t :: %__MODULE__{
    :"AddressMode" => String.t | nil,
    :"CanaryMeta" => %{optional(String.t) => String.t} | nil,
    :"CanaryTags" => [String.t] | nil,
    :"CheckRestart" => Nomad.Model.CheckRestart.t | nil,
    :"Checks" => [Nomad.Model.ServiceCheck.t] | nil,
    :"Connect" => Nomad.Model.ConsulConnect.t | nil,
    :"EnableTagOverride" => boolean() | nil,
    :"Id" => String.t | nil,
    :"Meta" => %{optional(String.t) => String.t} | nil,
    :"Name" => String.t | nil,
    :"OnUpdate" => String.t | nil,
    :"PortLabel" => String.t | nil,
    :"Tags" => [String.t] | nil,
    :"TaskName" => String.t | nil
  }
end

defimpl Poison.Decoder, for: Nomad.Model.Service do
  import Nomad.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"CheckRestart", :struct, Nomad.Model.CheckRestart, options)
    |> deserialize(:"Checks", :list, Nomad.Model.ServiceCheck, options)
    |> deserialize(:"Connect", :struct, Nomad.Model.ConsulConnect, options)
  end
end

